#version 450

layout(set = 0, binding = 0) uniform Ray {
    vec3 origin;
    vec3 direction;
} ray;

layout(push_constant, std430) uniform Object {
    mat4 model;
    int index;
} object;

struct Ray_Intersection {
    vec3 point;
    vec3 normal;
    uint number_of_intersections;
};

struct Triangle {
    vec3 a, b, c;
};

layout(std140, set = 1, binding = 1) readonly buffer TrianglesIn {
   Triangle triangles_in[ ];
};

layout(std140, set = 2, binding = 2) buffer IntersectionsOut {
   Ray_Intersection intersections_out[ ];
};

layout (local_size_x = 256, local_size_y = 1, local_size_z = 1) in;

void main() {
    uint index = gl_GlobalInvocationID.x;
}